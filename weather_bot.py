"""
–î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫–∏ –∑ –≤–∏–±–æ—Ä–æ–º –¥–Ω—è

–í–∏–≤–µ—Å—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é:
–º–∞–∫—Å —Ç–µ–º–ø
–º—ñ–Ω —Ç–µ–º–ø
–ø–æ—Ç–æ—á–Ω—É —Ç–µ–º–ø
–≤–æ–ª–æ–≥—ñ—Å—Ç—å
—Å–∏–ª–∞ —ñ –Ω–∞–ø—Ä—è–º–æ–∫ –≤—ñ—Ç—Ä—É
–æ–ø–∏—Å
–ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è, —è–∫—â–æ —î

–ü—Ä–∏–∫—Ä—ñ–ø–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ —É —Ñ–∞–π–ª readme.txt 

–Ø–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –∑ –ø—Ä–æ–µ–∫—Ç–æ–º
"""


import telebot
import config

from bs4 import BeautifulSoup
import requests

bot = telebot.TeleBot(config.TOKEN)
send_city = '—Ä—ñ–≤–Ω–µ'
direction = {
    '–ü—ñ–≤–¥–µ–Ω–Ω–∏–π': '‚¨ÜÔ∏è',
    '–ü—ñ–≤–Ω—ñ—á–Ω–∏–π': '‚¨áÔ∏è',
    '–°—Ö—ñ–¥–Ω–∏–π': '‚¨ÖÔ∏è',
    '–ó–∞—Ö—ñ–¥–Ω–∏–π': '‚û°Ô∏è',
    '–ü—ñ–≤–¥–µ–Ω–Ω–æ-—Å—Ö—ñ–¥–Ω–∏–π': '‚ÜñÔ∏è',
    '–ü—ñ–≤–¥–µ–Ω–Ω–æ-–∑–∞—Ö—ñ–¥–Ω–∏–π': '‚ÜóÔ∏è',
    '–ü—ñ–≤–Ω—ñ—á–Ω–æ-—Å—Ö—ñ–¥–Ω–∏–π': '‚ÜôÔ∏è',
    '–ü—ñ–≤–Ω—ñ—á–Ω–æ-–∑–∞—Ö—ñ–¥–Ω–∏–π': '‚ÜòÔ∏è',
    '–®—Ç–∏–ª—å': '‚è∫',
}

# --------------–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–≥–æ–¥–∏-----------------------------------


def loadWather(url):
    request = requests.get(url)
    html = BeautifulSoup(request.content, 'html.parser')
    if request.status_code == 200:
        return html
    else:
        html = None
        return html
# -------------—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –ø–æ–≥–æ–¥–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫------------------------------------


def weatherOneDay(message, id_day, class_send, url):

    wather = loadWather(url)
    if wather == None:
        bot.send_message(message, '–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –º—ñ—Å—Ç–∞')
    else:
        tabsTop = wather.find('div', id=id_day)
        tbody = tabsTop.find('tbody')
        td = tbody.find_all('td', class_=class_send)

        wint = td[6].find('div', class_='wind').get(
            'data-tooltip').split(',')[0]

        city = wather.find('div', class_='cityName').find(
            'h1').find('strong').text

        min_temp = wather.select_one('.temperature .min').text.strip()
        max_temp = wather.select_one('.temperature .max').text.strip()
        desc = wather.select_one('.wDescription .description').text.strip()

        if id_day == 'bd1c':
            time = wather.select_one('.lSide .today-time').text.strip()
            info = time
        else:
            if class_send == 'p5':
                info = '–ü–æ–≥–æ–¥–∞ o 12:00 '
            if class_send == 'p3':
                info = '–ü–æ–≥–æ–¥–∞ o 15:00 '
        denger1 = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'
        denger2 = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'
        if wather.find('div', class_='oWarnings'):
            denger = wather.find('div', class_='oWarnings').find_all(
                'div', class_='description')
            if len(denger) == 1:
                denger1 = denger[0].text
            else:
                denger1 = denger[0].text
                denger2 = denger[1].text

        bot.send_message(
            message, f'üïí{info} - {city}\nüå°Ô∏è{min_temp}\nüå°Ô∏è{max_temp}\n\
            –í—ñ—Ç–µ—Ä:{direction[wint]} - {td[6].text} –º/—Å\n\
            –¢–∏—Å–∫- {td[4].text} –º–º \n\
            üíß - {td[5].text} %\
            üåß - {td[7].text} %\
            \nüìë{desc} \
            \n‚ö†Ô∏è{denger1} \
            \n‚ÄºÔ∏è{denger2} ')

# -------------------–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ------------------------------


@bot.message_handler(commands=['start'])
def main(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    keyboard.row('/start', '/bottons', '/help')
    url = f'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-{send_city}'
    bot.send_message(message.chat.id, text='–ü—Ä–∏–≤—ñ—Ç.', reply_markup=keyboard)
    weatherOneDay(message.chat.id, 'bd1c', 'cur', url)
# --------------------–†–æ–±–æ—Ç–∞ –∫–Ω–æ–ø–æ–∫----------------------------------------


@bot.message_handler(commands=['bottons'])
def bottons(message):

    tabsWeather = []
    tabsImage = []

    tabBotton = []
    url = f'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-{send_city}'
    tabs = loadWather(url).find('div', 'tabs')
    tab = tabs.find_all('div')
# -----------------------------------------------
    for i in range(0, len(tab)):
        if tab[i].get('id') == None:
            continue
        tabsWeather.append(tab[i].get('id'))
        if tab[i].find('img') == None:
            continue
        tabsImage.append(tab[i].find('img').get('src')[2:])
        tabsDay = []
        if tab[i].select_one('.date'):
            tabsDay.append(tab[i].select_one('.day-link').text)
            tabsDay.append(tab[i].select_one('.date').text)
            tabsDay.append(tab[i].select_one('.month').text)
        if tabsDay:
            tabBotton.append(tabsDay)
# -----------------------------------------------
    # bot.send_photo(message.from_user.id,tabsImage[0])

    markup = telebot.types.InlineKeyboardMarkup()
    for i in range(0, len(tabBotton)):
        markup.add(telebot.types.InlineKeyboardButton(
            text=f"{' '.join(tabBotton[i])}", callback_data=f'{tabsWeather[i]}'))

    bot.send_message(
        message.chat.id, text='–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –¥–µ–Ω—å', reply_markup=markup)
# ----------------–í–∏–∫–æ–Ω—É—î–º–æ –¥—ñ—é –∫–Ω–æ–ø–æ–∫----------------------


@ bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    bot.answer_callback_query(
        callback_query_id=call.id, text="You check some button!")
    url = f'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-{send_city}'

    tabs = loadWather(url).find('div', 'tabs')
    tab = tabs.find_all('div')

    arr_link = []
    for i in range(0, len(tab)):
        if tab[i].find('a', class_='day-link'):
            arr_link.append(tab[i].find(
                'a', class_='day-link').get('data-link'))

    if call.data == 'bd1':
        url = f'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-{send_city}'

        weatherOneDay(call.message.chat.id, 'bd1c', 'cur', url)
    elif call.data == 'bd2':
        weatherOneDay(call.message.chat.id, 'bd2c',
                      'p5', 'https:'+arr_link[0])
    elif call.data == 'bd3':
        weatherOneDay(call.message.chat.id, 'bd3c',
                      'p3', 'https:'+arr_link[1])
    elif call.data == 'bd4':
        weatherOneDay(call.message.chat.id, 'bd4c',
                      'p3', 'https:'+arr_link[2])
    elif call.data == 'bd5':
        weatherOneDay(call.message.chat.id, 'bd5c',
                      'p3', 'https:'+arr_link[3])
    elif call.data == 'bd6':
        weatherOneDay(call.message.chat.id, 'bd6c',
                      'p3', 'https:'+arr_link[4])
    elif call.data == 'bd7':
        weatherOneDay(call.message.chat.id, 'bd7c',
                      'p3', 'https:'+arr_link[5])

    # bot.send_message(call.message.chat.id, answer)
    bot.edit_message_reply_markup(
        call.message.chat.id, call.message.message_id)
# -------------–î–æ–ø–æ–º–æ–≥–∞---------------------------


@ bot.message_handler(commands=['help'])
def main(message):
    bot.send_message(
        message.chat.id, '–ë–æ—Ç –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≥–æ–¥—É –Ω–∞ 7 –¥–Ω—ñ–≤, —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ –Ω–∞–∑–≤—ñ –Ω–∞—Å–µ–ª–µ–Ω–æ–≥–æ –ø—É–Ω–∫—Ç—É')

# ----------------–í–∏–≤–æ–¥–∏–º–æ –ø–æ –Ω–∞–∑–≤—ñ –Ω–∞—Å–µ–ª–µ–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞-------------------------------


@bot.message_handler(content_types=['text'])
def send_text(message):

    url = f'https://ua.sinoptik.ua/–ø–æ–≥–æ–¥–∞-{message.text.lower()}'
    bot.send_message(message.chat.id, message.text.lower())
    weatherOneDay(message.chat.id, 'bd1c', 'cur', url)


bot.polling()
# driver.close()
